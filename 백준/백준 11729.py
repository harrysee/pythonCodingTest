# 하노이탑 이동순서
#세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다. 이제 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다.
# 한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
# 쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
# 재귀, 이동횟수 최소화
# 원판이 n개일때, 2n-1번의 이동으로 모두 옮길수있다.
# 2n − 1는 메르센 수라고 부른다
# 원반이 어떻게 이동되는지를 기둥 번호로 나타내는 것

def hanoi_tower(n, start, end): # 남은개수,시작, 도착
    if n == 1:
        print(start, end)
        return

    # 6 - start - end : 기둥번호 1,2,3을 모두 더하면 6이므로 6에서 시작과끝을 빼서 나머지수를 구함
    hanoi_tower(n - 1, start, 6 - start - end)  # 1단계 : 맨밑에빼고 보조로 이동
    print(start, end)  # 2단계 : 맨밑에꺼 옮기기
    hanoi_tower(n - 1, 6 - start - end, end)  # 3단계 : 보조에 있던 것들 다시 3으로 옮기기

N = int(input())
print(2**N-1)
hanoi_tower(N,1,3)

# 하노이탑 배웠었는데 기억이 안나서 다시 참고하였다.
# 이젠 걍 코드를 외워야겠다.
# 하노이타워 횟수를 쉽게 구하는 방법 2의 n-1제곱 = 2n-1번의 이동으로 모두 옮길수있다.ㅋㅋ..

